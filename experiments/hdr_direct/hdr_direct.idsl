//****************************************************************************//
//* Copyright (c) 2016, NVIDIA CORPORATION. All rights reserved.             *//
//*                                                                          *//
//* Redistribution and use in source and binary forms, with or without       *//
//* modification, are permitted provided that the following conditions       *//
//* are met:                                                                 *//
//*  * Redistributions of source code must retain the above copyright        *//
//*    notice, this list of conditions and the following disclaimer.         *//
//*  * Redistributions in binary form must reproduce the above copyright     *//
//*    notice, this list of conditions and the following disclaimer in the   *//
//*    documentation and/or other materials provided with the distribution.  *//
//*  * Neither the name of NVIDIA CORPORATION nor the names of its           *//
//*    contributors may be used to endorse or promote products derived       *//
//*    from this software without specific prior written permission.         *//
//*                                                                          *//
//* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY     *//
//* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE        *//
//* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR       *//
//* PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR        *//
//* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,    *//
//* EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,      *//
//* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR       *//
//* PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY      *//
//* OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT             *//
//* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE    *//
//* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.     *//
//****************************************************************************//

/// This example is obtained from the paper "Exposure Fusion" by Mertens et.al in Pacific Graphics 2007

struct rgb { float r ; float g ; float b; }
stencil make_grey(vector#2 rgb X){
  return (0.02126f * X.r + 0.7152f * X.g + 0.0722f * X.b) / 255.0f;
}
stencil laplacian(vector#2 float X){
  return 4 * X - ( X@[-1,0] + X@[0,-1] + X@[1,0] + X@[0,1] ); 
}
stencil saturation(vector#2 rgb X){
  average = ( X.r + X.g + X.b ) / 3.0f;
  std_dev =  sqrt( ( ( X.r - average)*(X.r - average) + (X.b - average)*(X.b - average) + (X.g - average)*(X.g - average) ) / 3.0f );
  return std_dev;
}
stencil well_exposed(vector#2 rgb Y){
  red = exp(-12.5f * ((Y.r/255.0f)-0.5f)*((Y.r/255.0f)-0.5f));
  green = exp(-12.5f * ((Y.g/255.0f)-0.5f)*((Y.g/255.0f)-0.5f));
  blue = exp(-12.5f * ((Y.b/255.0f)-0.5f)*((Y.b/255.0f)-0.5f));
  return red * green * blue;
}
stencil multiply(vector#2 float X, vector#2 float Y, vector#2 float Z){
  return X * Y * Z;
}
stencil combine(vector#2 float W1, vector#2 rgb I1, vector#2 float W2, vector#2 rgb I2, vector#2 float W3, vector#2 rgb I3, vector#2 float W4, vector#2 rgb I4 ){
   sum = W1 + W2 + W3 + W4;	
   red = ( W1 * I1.r + W2 * I2.r + W3 * I3.r + W4 * I4.r) / sum;
   green = ( W1 * I1.g + W2 * I2.g + W3 * I3.g + W4 * I4.g) / sum;
   blue = ( W1 * I1.b + W2 * I2.b + W3 * I3.b + W4 * I4.b) / sum;
   return struct rgb(red,green,blue);
}
vector compute_weights(vector#2 rgb image){
  grey = make_grey(image);
  laplacian = laplacian(grey);
  saturation = saturation(image);
  well_exposed = well_exposed(image);
  return multiply(laplacian,saturation,well_exposed);
}
parameter M,N;
vector#2 rgb image1[M,N];
vector#2 rgb image2[M,N];
vector#2 rgb image3[M,N];
vector#2 rgb image4[M,N];
weights1 = compute_weights(image1);
weights2 = compute_weights(image2);
weights3 = compute_weights(image3);
weights4 = compute_weights(image4);
return combine(weights1,image1,weights2,image2,weights3,image3,weights4,image4);
